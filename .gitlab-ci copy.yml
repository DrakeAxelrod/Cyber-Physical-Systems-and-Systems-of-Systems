# Copyright (C) 2022  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# Which Docker image shall be used on the GitLab runner?

image: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - name: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3-dind
    alias: docker

stages:
  - build
  - test
  - deploy

# Display information before we start the build.
before_script:
  - docker info
  - docker login -u $DOCKER_REG_CID -p $DOCKER_REG_TOKEN $CI_REGISTRY
  # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY/tests/* */c++/* -o coverageFiltered.info
  # - lcov --list coverageFiltered.info

# This section describes what shall be done to build and test the project.
build-and-test:
  tags:
    - docker-build
  stage: build
  before_script:
    - apt-get -qq update && apt-get -qq install -y make autoconf gcc g++ gcovr ggcov lcov
    - apt-get update && apt-get -y upgrade
    - apt-get install -y lcov
  script:
    - docker build -t "$CI_REGISTRY_IMAGE":latest -f Dockerfile
    - lcov --list /opt/sources/build/coverage.info
  except:
    - $CI_COMMIT_TAG
  allow_failure: false
  
coverage:
  image: "$CI_REGISTRY_IMAGE":latest
  stage: coverage
  tags:
    - docker-build
  before_script:
    - apt-get -qq update && apt-get -qq install -y make autoconf gcc g++ gcovr ggcov lcov
    - apt-get update && apt-get -y upgrade
    - apt-get install -y lcov
  script: 
    - lcov --list /opt/sources/build/coverage.info
    
# This section describes what shall be done to deploy artefacts from the project.
release:
  tags:
    - docker-build
  stage: deploy
  script:
    - docker build -f Dockerfile -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG"
  rules: 
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+$/ 
  