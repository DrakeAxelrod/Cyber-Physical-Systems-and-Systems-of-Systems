digraph "cluon::TCPServer"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{cluon::TCPServer\n||+ TCPServer()\l+ ~TCPServer()\l+ isRunning()\l- TCPServer()\l- TCPServer()\l- operator=()\l- operator=()\l- closeSocket()\l- readFromSocket()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_newConnectionDelegate\lMutex\n-m_socketMutex" ,arrowhead="odiamond"];
  Node2 [label="{std::mutex\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_socket" ,arrowhead="odiamond"];
  Node3 [label="{int32_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_readFromSocketThreadRunning" ,arrowhead="odiamond"];
  Node4 [label="{std::atomic\< bool \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond"];
  Node5 [label="{bool\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< bool \>" ];
  Node6 [label="{std::atomic\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond"];
  Node7 [label="{T\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_readFromSocketThread" ,arrowhead="odiamond"];
  Node8 [label="{std::thread\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_newConnectionDelegate" ,arrowhead="odiamond"];
  Node9 [label="{function\< void(std\l::string &&from, std\l::shared_ptr\< cluon::\lTCPConnection \> connection)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
}
