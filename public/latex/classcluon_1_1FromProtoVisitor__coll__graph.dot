digraph "cluon::FromProtoVisitor"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{cluon::FromProtoVisitor\n||+ FromProtoVisitor()\l+ ~FromProtoVisitor()\l+ operator=()\l+ decodeFrom()\l+ preVisit()\l+ postVisit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ visit()\l+ decodeFrom()\l- FromProtoVisitor()\l- FromProtoVisitor()\l- operator=()\l- fromZigZag8()\l- fromZigZag16()\l- fromZigZag32()\l- fromZigZag64()\l- fromVarInt()\l- readBytesFromStream()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_callToDecodeFromWithDirect\lVisit" ,arrowhead="odiamond"];
  Node2 [label="{bool\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_mapOfKeyValues" ,arrowhead="odiamond"];
  Node3 [label="{std::unordered_map\l\< uint32_t, linb::any,\l cluon::UseUInt32ValueAsHashKey \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node4 [label="{uint32_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node5 [label="{linb::any\n||+ any()\l+ any()\l+ any()\l+ ~any()\l+ any()\l+ operator=()\l+ operator=()\l+ operator=()\l+ clear()\l+ empty()\l+ type()\l+ swap()\l# cast()\l# cast()\l- do_construct()\l- do_construct()\l- construct()\l- vtable_for_type()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlinb_1_1any.html",tooltip=" "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -storage" ,arrowhead="odiamond"];
  Node6 [label="{linb::any::storage\l_union\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$unionlinb_1_1any_1_1storage__union.html",tooltip=" "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +dynamic" ,arrowhead="odiamond"];
  Node7 [label="{void *\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +stack" ,arrowhead="odiamond"];
  Node8 [label="{type\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -vtable" ,arrowhead="odiamond"];
  Node9 [label="{linb::any::vtable_type\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structlinb_1_1any_1_1vtable__type.html",tooltip="Base VTable specification."];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +type" ,arrowhead="odiamond"];
  Node10 [label="{type_info &(*)() noexcept\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +destroy" ,arrowhead="odiamond"];
  Node11 [label="{void(*)(storage_union\l &) noexcept\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +copy" ,arrowhead="odiamond"];
  Node12 [label="{void(*)(const storage\l_union &src, storage\l_union &dest)\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +move" ,arrowhead="odiamond"];
  Node13 [label="{void(*)(storage_union\l &src, storage_union\l &dest) noexcept\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +swap" ,arrowhead="odiamond"];
  Node14 [label="{void(*)(storage_union\l &lhs, storage_union\l &rhs) noexcept\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node3 [dir="back",color="orange",fontsize="10",style="solid",label=" \< uint32_t, linb::any,\l cluon::UseUInt32ValueAsHash\lKey \>" ];
  Node15 [label="{std::unordered_map\l\< K, T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node16 [label="{K\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node17 [label="{T\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_keyFieldType\n-m_value" ,arrowhead="odiamond"];
  Node18 [label="{uint64_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_doubleValue" ,arrowhead="odiamond"];
  Node19 [label="{cluon::FromProtoVisitor\l::DoubleValue\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$unioncluon_1_1FromProtoVisitor_1_1DoubleValue.html",tooltip=" "];
  Node20 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node20 [label="{std::array\< char, sizeof\l(double)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node21 [label="{char\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node20 [dir="back",color="orange",fontsize="10",style="solid",label=" \< char, sizeof(double)\>" ];
  Node22 [label="{std::array\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node22 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node18 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +uint64Value" ,arrowhead="odiamond"];
  Node23 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +doubleValue" ,arrowhead="odiamond"];
  Node23 [label="{double\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_floatValue" ,arrowhead="odiamond"];
  Node24 [label="{cluon::FromProtoVisitor\l::FloatValue\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$unioncluon_1_1FromProtoVisitor_1_1FloatValue.html",tooltip=" "];
  Node25 -> Node24 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node25 [label="{std::array\< char, sizeof\l(float)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node25 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node22 -> Node25 [dir="back",color="orange",fontsize="10",style="solid",label=" \< char, sizeof(float)\>" ];
  Node4 -> Node24 [color="grey25",fontsize="10",style="solid",label=" +uint32Value" ,arrowhead="odiamond"];
  Node26 -> Node24 [color="grey25",fontsize="10",style="solid",label=" +floatValue" ,arrowhead="odiamond"];
  Node26 [label="{float\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_stringValue" ,arrowhead="odiamond"];
  Node27 [label="{std::vector\< char \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node27 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node28 -> Node27 [dir="back",color="orange",fontsize="10",style="solid",label=" \< char \>" ];
  Node28 [label="{std::vector\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node28 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node29 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_protoType" ,arrowhead="odiamond"];
  Node29 [label="{ProtoConstants\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_fieldId" ,arrowhead="odiamond"];
}
