digraph "peg::ParserGenerator"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{peg::ParserGenerator\n||+ parse()\l+ parse()\l+ grammar()\l- ParserGenerator()\l- make_grammar()\l- setup_actions()\l- perform_core()\l- get_instance()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -g" ,arrowhead="odiamond"];
  Node2 [label="{std::unordered_map\l\< std::string, Definition \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node3 [label="{std::string\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node5 [label="{peg::Definition\n||+ Definition()\l+ Definition()\l+ Definition()\l+ Definition()\l+ operator std::shared\l_ptr\< Ope \>()\l+ operator\<=()\l+ parse()\l+ parse()\l+ parse()\l+ parse()\l+ parse_and_get_value()\l+ parse_and_get_value()\l+ parse_and_get_value()\l+ parse_and_get_value()\l+ operator=()\l+ operator,()\l+ operator~()\l+ accept()\l+ get_core_operator()\l+ is_token()\l- operator=()\l- operator=()\l- parse_core()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpeg_1_1Definition.html",tooltip=" "];
  Node3 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +name" ,arrowhead="odiamond"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +id" ,arrowhead="odiamond"];
  Node6 [label="{size_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +action" ,arrowhead="odiamond"];
  Node7 [label="{peg::Action\n||+ Action()\l+ Action()\l+ Action()\l+ Action()\l+ Action()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator bool()\l+ operator()()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l- make_adaptor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpeg_1_1Action.html",tooltip=" "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -fn_" ,arrowhead="odiamond"];
  Node8 [label="{function\< any(SemanticValues\l &sv, any &dt)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +enter" ,arrowhead="odiamond"];
  Node9 [label="{function\< void(const\l char *s, size_t n, peg\l::any &dt)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +leave" ,arrowhead="odiamond"];
  Node10 [label="{function\< void(const\l char *s, size_t n, size\l_t matchlen, peg::any &value,\l peg::any &dt)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +error_message" ,arrowhead="odiamond"];
  Node11 [label="{function\< std::string()\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +enablePackratParsing\n+ignoreSemanticValue\n+is_macro\n-is_token_" ,arrowhead="odiamond"];
  Node12 [label="{bool\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +whitespaceOpe\n+wordOpe" ,arrowhead="odiamond"];
  Node13 [label="{std::shared_ptr\< peg\l::Ope \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond"];
  Node14 [label="{peg::Ope\n||+ ~Ope()\l+ parse()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpeg_1_1Ope.html",tooltip=" "];
  Node15 -> Node13 [dir="back",color="orange",fontsize="10",style="solid",label=" \< peg::Ope \>" ];
  Node15 [label="{std::shared_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond"];
  Node16 [label="{T\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +params" ,arrowhead="odiamond"];
  Node17 [label="{std::vector\< std::string \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node17 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node18 -> Node17 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string \>" ];
  Node18 [label="{std::vector\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node18 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node19 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +tracer" ,arrowhead="odiamond"];
  Node19 [label="{function\< void(const\l char *name, const char\l *s, size_t n, const SemanticValues\l &sv, const Context &c, const\l any &dt)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -holder_" ,arrowhead="odiamond"];
  Node20 [label="{std::shared_ptr\< peg\l::Holder \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond"];
  Node21 [label="{peg::Holder\n||+ Holder()\l+ parse()\l+ accept()\l+ reduce()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpeg_1_1Holder.html",tooltip=" "];
  Node14 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 -> Node21 [color="grey25",fontsize="10",style="solid",label=" +ope_" ,arrowhead="odiamond"];
  Node5 -> Node21 [color="grey25",fontsize="10",style="solid",label=" +outer_" ,arrowhead="odiamond"];
  Node15 -> Node20 [dir="back",color="orange",fontsize="10",style="solid",label=" \< peg::Holder \>" ];
  Node22 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -is_token_init_" ,arrowhead="odiamond"];
  Node22 [label="{once_flag\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< std::string, Definition \>" ];
  Node23 [label="{std::unordered_map\l\< K, T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node23 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node24 [label="{K\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node23 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
}
