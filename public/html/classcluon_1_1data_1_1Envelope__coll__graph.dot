digraph "cluon::data::Envelope"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{cluon::data::Envelope\n||+ Envelope()\l+ Envelope()\l+ operator=()\l+ Envelope()\l+ operator=()\l+ ~Envelope()\l+ dataType()\l+ dataType()\l+ serializedData()\l+ serializedData()\l+ sent()\l+ sent()\l+ received()\l+ received()\l+ sampleTimeStamp()\l+ sampleTimeStamp()\l+ senderStamp()\l+ senderStamp()\l+ accept()\l+ accept()\l+ accept()\l+ ID()\l+ ShortName()\l+ LongName()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -TheLongName\n-TheShortName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{char\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_dataType" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{int32_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_serializedData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{std::string\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_received\n-m_sampleTimeStamp\n-m_sent" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{cluon::data::TimeStamp\n||+ TimeStamp()\l+ TimeStamp()\l+ operator=()\l+ TimeStamp()\l+ operator=()\l+ ~TimeStamp()\l+ seconds()\l+ seconds()\l+ microseconds()\l+ microseconds()\l+ accept()\l+ accept()\l+ accept()\l+ ID()\l+ ShortName()\l+ LongName()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcluon_1_1data_1_1TimeStamp.html",tooltip=" "];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -TheLongName\n-TheShortName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_microseconds\n-m_seconds" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_senderStamp" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{uint32_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
}
