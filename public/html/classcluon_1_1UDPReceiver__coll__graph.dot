digraph "cluon::UDPReceiver"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{cluon::UDPReceiver\n||+ UDPReceiver()\l+ ~UDPReceiver()\l+ isRunning()\l- UDPReceiver()\l- UDPReceiver()\l- operator=()\l- operator=()\l- closeSocket()\l- readFromSocket()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_socket" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{int32_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_isBlockingSocket\n-m_isMulticast" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{bool\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_listOfLocalIPAddresses" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{std::set\< unsigned\l long \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{unsigned long\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< unsigned long \>" ,fontname="Helvetica"];
  Node6 [label="{std::set\< K \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{K\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_localSendFromPort" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{uint16_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_readFromSocketThreadRunning" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{std::atomic\< bool \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node9 [dir="back",color="orange",fontsize="10",style="solid",label=" \< bool \>" ,fontname="Helvetica"];
  Node10 [label="{std::atomic\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{T\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_readFromSocketThread" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{std::thread\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_delegate" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{function\< void(std\l::string &&, std::string\l &&, std::chrono::system\l_clock::time_point)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_pipeline" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{std::shared_ptr\< cluon\l::NotifyingPipeline\< cluon\l::UDPReceiver::PipelineEntry \> \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{cluon::NotifyingPipeline\l\< cluon::UDPReceiver::Pipeline\lEntry \>\n||+ NotifyingPipeline()\l+ ~NotifyingPipeline()\l+ add()\l+ notifyAll()\l+ isRunning()\l- NotifyingPipeline()\l- NotifyingPipeline()\l- operator=()\l- operator=()\l- processPipeline()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcluon_1_1NotifyingPipeline.html",tooltip=" "];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_delegate" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{function\< void(cluon\l::UDPReceiver::PipelineEntry &&)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classstd_1_1function_3_01void_07cluon_1_1UDPReceiver_1_1PipelineEntry_01_6_6_08_4.html",tooltip=" "];
  Node9 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineThreadRunning" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineThread" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineMutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{std::mutex\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineCondition" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{condition_variable\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_pipeline" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{std::deque\< cluon::\lUDPReceiver::PipelineEntry \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{cluon::UDPReceiver\l::PipelineEntry\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcluon_1_1UDPReceiver_1_1PipelineEntry.html",tooltip=" "];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +m_data\n+m_from" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{std::string\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node22 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +m_sampleTime" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{time_point\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node19 [dir="back",color="orange",fontsize="10",style="solid",label=" \< cluon::UDPReceiver\l::PipelineEntry \>" ,fontname="Helvetica"];
  Node24 [label="{std::deque\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node24 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 -> Node15 [dir="back",color="orange",fontsize="10",style="solid",label=" \< cluon::UDPReceiver\l::PipelineEntry \>" ,fontname="Helvetica"];
  Node25 [label="{cluon::NotifyingPipeline\< T \>\n||+ NotifyingPipeline()\l+ ~NotifyingPipeline()\l+ add()\l+ notifyAll()\l+ isRunning()\l- NotifyingPipeline()\l- NotifyingPipeline()\l- operator=()\l- operator=()\l- processPipeline()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcluon_1_1NotifyingPipeline.html",tooltip=" "];
  Node26 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_delegate" ,arrowhead="odiamond",fontname="Helvetica"];
  Node26 [label="{function\< void(T &&)\>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineThreadRunning" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineThread" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineMutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_pipelineCondition" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_pipeline" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{deque\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node14 [dir="back",color="orange",fontsize="10",style="solid",label=" \< cluon::NotifyingPipeline\l\< cluon::UDPReceiver::PipelineEntry \> \>" ,fontname="Helvetica"];
  Node28 [label="{std::shared_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node28 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
}
